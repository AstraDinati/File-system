Операции над файлами в PHP

1. Переименовывание

Функция rename позволяет переименовывать файлы. Первым параметром указываем старое имя файла, вторым - новое имя файла:

<?php
	rename('test.txt', 'new.txt');
?>

*) Пусть в корне вашего сайта лежит файл old.txt. Переименуйте его на new.txt

/hw1

2. Перемещение

Функция rename позволяет также перемещать файлы. Для этого вторым параметром функции нужно указать новый путь к файлу. Давайте для примера перенесем наш файл в папку dir, 
одновременно переименовав его на new.txt:

<?php
	rename('test.txt', 'dir/new.txt');
?>
Можно сделать только перемещение, а сам файл не переименовывать:

<?php
	rename('test.txt', 'dir/test.txt');
?>

*) Пусть в корне вашего сайта лежит папка dir1, а в ней файл file.txt. Пусть также в корне вашего сайта лежит папка dir2. Переместите файл в эту папку.

/hw2

3. Копирование

Функция copy позволяет копировать файл. Первым параметром она принимает путь к файлу, который хотим копировать, вторым - новый путь файла, куда хотим положить копию. 
Мы можем сделать копию и положить ее рядом, или положить ее в другую папку. Сделаем просто копию:

Давайте для примера сделаем копию файла, разместив ее в папке с исходным файлом:

<?php
	copy('test.txt', 'copy.txt');
?>
А теперь давайте поместим нашу копию в папку dir:

copy('test.txt', 'dir/copy.txt');

*) Пусть в корне вашего сайта лежит файл. С помощью цикла положите в папку copy пять копий этого файла. Именем файлов копий пусть будут их порядковые номера.

/hw3

4. Удаление

Для удаления файлов используется функция unlink. Параметром она принимает путь к удаляемому файлу:

<?php
	unlink('test.txt');

*) Пусть в корне вашего сайта лежат файлы 1.txt, 2.txt и 3.txt. Вручную сделайте массив с именами этих файлов. Переберите его циклом и удалите все эти файлы.

/hw4

5. Размер файла
Функция filesize позволяет находить размеры файла в байтах. Пример:

<?php
	echo filesize('test.txt');
?>
Размер в байтах легко можно перевести в килобайты:

<?php
	echo filesize('test.txt') / 1024;
?>
А теперь давайте переведем в мегабайты:

<?php
	echo filesize('test.txt') / (1024 * 1024);
?>

*) Пусть в корне вашего сайта лежит файл. Узнайте его размер, выведите на экран.

/hw5 //3011

*) Модифицируйте предыдущую задачу так, чтобы размер файла выводился в килобайтах.

/hw5 //2.9404296875

*) Положите в корень вашего сайта какую-нибудь картинку размером более мегабайта. Узнайте размер этого файла и переведите его в мегабайты.

/hw5 //2.3719530105591

6. Проверка существования

Функция file_exists проверяет существует ли файл, путь к которому передан параметром. Пример:

var_dump(file_exists('test.txt')); // true или false
Как правило, эта функция используется для того, чтобы проверить наличие файла перед выполнением операции над ним. Например, так:

<?php
	if (file_exists('test.txt')) {
		echo filesize('test.txt');
	} else {
		echo 'файла не существует';
	}
?>

*) Проверьте, лежит ли в корне вашего сайта файл file.txt.

/hw6

*) Проверьте, лежит ли в корне вашего сайта файл file.txt. Если нет - создайте его и запишите в него текст '!'.

/hw7

*) Проверьте, лежит ли в корне вашего сайта файл message.txt. Если такой файл есть - выведите текст этого файла на экран.

/hw8